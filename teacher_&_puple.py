# Пусть необходимо разработать виртуальную модель процесса обучения. В программе должны быть объекты-ученики, учитель,
# кладезь знаний. Потребуется три класса – "учитель", "ученик", "данные". Учитель и ученик во многом похожи, оба – люди.
# Значит, их классы могут принадлежать одному надклассу "человек". Однако в контексте данной задачи у учителя и ученика
# вряд ли найдутся общие атрибуты.
#
# Определим, что должны уметь объекты для решения задачи "увеличить знания":
# Ученик должен уметь брать информацию и превращать ее в свои знания.
# Учитель должен уметь учить группу учеников.
# Данные могут представлять собой список знаний. Элементы будут извлекаться по индексу.
# В класс Teacher также добавлено свойство экземпляров work, чтобы подсчитывать количество проделанной учителем работы.
#
# Теперь посмотрим, как объекты этих классов могут взаимодействовать между собой
# Может ли в этой программе ученик учиться без учителя? Если да, пусть научится чему-нибудь сам.
# Добавьте в класс студент метод, позволяющий ученику случайно "забывать" какую-нибудь часть своих знаний.

class Pupil:
    def __init__(self, name):
        self.name = name
        self.knowledge_list = []

    def selfeducation(self):
        pass


class Teacher:
    def __init__(self, name):
        self.name = name
        self.work = []

    def teach_a_group(self):
        pass


class Data:

